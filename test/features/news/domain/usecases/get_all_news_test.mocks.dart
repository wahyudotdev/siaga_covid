// Mocks generated by Mockito 5.0.11 from annotations
// in covid_statistics/test/features/news/domain/usecases/get_all_news_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:covid_statistics/core/error/failure.dart' as _i5;
import 'package:covid_statistics/features/news/domain/entities/news.dart'
    as _i6;
import 'package:covid_statistics/features/news/domain/repositories/news_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [NewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRepository extends _i1.Mock implements _i3.NewsRepository {
  MockNewsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.News>>> getAllNews() =>
      (super.noSuchMethod(Invocation.method(#getAllNews, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.News>>>.value(
              _FakeEither<_i5.Failure, List<_i6.News>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.News>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.News>>> getFavoriteNews() =>
      (super.noSuchMethod(Invocation.method(#getFavoriteNews, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.News>>>.value(
              _FakeEither<_i5.Failure, List<_i6.News>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.News>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.News>> addOrDeleteFavoriteNews(
          _i6.News? news) =>
      (super.noSuchMethod(Invocation.method(#addOrDeleteFavoriteNews, [news]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.News>>.value(
                  _FakeEither<_i5.Failure, _i6.News>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.News>>);
}
