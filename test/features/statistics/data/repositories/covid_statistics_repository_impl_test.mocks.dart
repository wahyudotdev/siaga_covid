// Mocks generated by Mockito 5.0.11 from annotations
// in covid_statistics/test/features/statistics/data/repositories/covid_statistics_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:covid_statistics/core/network/network_info.dart' as _i5;
import 'package:covid_statistics/core/utils/short_list.dart' as _i6;
import 'package:covid_statistics/features/statistics/data/datasources/covid_statistics_remote_datasource.dart'
    as _i3;
import 'package:covid_statistics/features/statistics/domain/entities/covid_statistics.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeCovidStatistics extends _i1.Fake implements _i2.CovidStatistics {}

/// A class which mocks [CovidStatisticsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCovidStatisticsRemoteDataSource extends _i1.Mock
    implements _i3.CovidStatisticsRemoteDataSource {
  MockCovidStatisticsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CovidStatistics> getCovidStatistics(String? date) =>
      (super.noSuchMethod(Invocation.method(#getCovidStatistics, [date]),
              returnValue:
                  Future<_i2.CovidStatistics>.value(_FakeCovidStatistics()))
          as _i4.Future<_i2.CovidStatistics>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [ShortList].
///
/// See the documentation for Mockito's code generation for more information.
class MockShortList extends _i1.Mock implements _i6.ShortList {
  MockShortList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.CovidStatistics> shortByDate(List<_i2.CovidStatistics>? list) =>
      (super.noSuchMethod(Invocation.method(#shortByDate, [list]),
          returnValue: <_i2.CovidStatistics>[]) as List<_i2.CovidStatistics>);
}
